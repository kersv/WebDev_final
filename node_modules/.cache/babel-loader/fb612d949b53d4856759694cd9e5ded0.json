{"ast":null,"code":"var _jsxFileName = \"/Users/kersv/dev/client-starter-code/src/components/containers/EditStudentContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        gpa: this.state.gpa,\n        email: this.state.email,\n        imageURL: this.state.imageURL,\n        id: this.state.studentId\n      };\n\n      if (typeof student.imageURL === undefined) {\n        student.imageURL = \"https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=20&m=1223671392&s=612x612&w=0&h=lGpj2vWAI3WUT1JeJWm1PRoHT3V15_1pdcTn2szdwQ0=\";\n      }\n\n      let newStudent = await this.props.editStudent(student);\n      console.log(\"new student: \", newStudent);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        imageURL: \"\",\n        email: \"\",\n        gpa: \"\",\n        campusId: null,\n        redirectId: this.state.studentId,\n        redirect: true\n      });\n    };\n\n    this.state = {\n      student: this.props.student,\n      studentId: this.props.match.params.id,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStudent(this.state.studentId);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditStudentView, {\n      studentInfo: this.state,\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\n\nEditStudentContainer.propTypes = {\n  fetchStudent: PropTypes.func.isRequired,\n  editStudent: PropTypes.func.isRequired\n};\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["/Users/kersv/dev/client-starter-code/src/components/containers/EditStudentContainer.js"],"names":["Component","connect","Redirect","PropTypes","EditStudentView","editStudentThunk","fetchStudentThunk","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","firstname","state","lastname","campusId","gpa","email","imageURL","id","studentId","undefined","newStudent","editStudent","console","log","redirectId","redirect","match","params","componentDidMount","fetchStudent","componentWillUnmount","render","mapState","mapDispatch","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchStudentThunk} from '../../store/thunks'; \n\nclass EditStudentContainer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          student: this.props.student,\n          studentId: this.props.match.params.id,\n          redirect: false, \n          redirectId: null,\n        };\n    }\n    \n    componentDidMount() {\n        this.props.fetchStudent(this.state.studentId);\n    }\n    \n    handleChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n      event.preventDefault();\n      let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId,\n        gpa: this.state.gpa,\n        email: this.state.email,\n        imageURL: this.state.imageURL,\n        id: this.state.studentId\n      };\n\n        if (typeof student.imageURL === undefined) {\n          student.imageURL = \"https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=20&m=1223671392&s=612x612&w=0&h=lGpj2vWAI3WUT1JeJWm1PRoHT3V15_1pdcTn2szdwQ0=\"\n        }\n\n        let newStudent = await this.props.editStudent(student);\n\n\n        console.log(\"new student: \", newStudent)\n        this.setState({\n          firstname: \"\", \n          lastname: \"\", \n          imageURL: \"\",\n          email: \"\",\n          gpa: \"\",\n          campusId: null, \n          redirectId: this.state.studentId,\n          redirect: true \n        });\n    }\n\n    componentWillUnmount() {\n        this.setState({redirect: false, redirectId: null});\n    }\n\n    render() {\n      if(this.state.redirect) {\n        return (<Redirect to={`/student/${this.state.redirectId}`}/>)\n      }\n        return (\n          <EditStudentView \n            studentInfo = {this.state}\n            handleChange = {this.handleChange} \n            handleSubmit={this.handleSubmit}      \n          />\n        );\n    }\n}\n\nconst mapState = (state) => {\n    return {\n      student: state.student,\n    };\n  };\n  \n\nconst mapDispatch = (dispatch) => {\n    return({\n        fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n        editStudent: (student) => dispatch(editStudentThunk(student)),\n    })\n}\n\nEditStudentContainer.propTypes = {\n    fetchStudent: PropTypes.func.isRequired,\n    editStudent: PropTypes.func.isRequired,\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"]},"metadata":{},"sourceType":"module"}